{"version":3,"file":"bundle-search-chefs.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN4B;;AAE5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,WAAW;AACxE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA,yCAAyC,QAAQ,IAAI,qCAAqC;AAC1F,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA","sources":["webpack://programming5/./src/main/scss/search.scss?73d7","webpack://programming5/webpack/bootstrap","webpack://programming5/webpack/runtime/make namespace object","webpack://programming5/./src/main/js/search-chefs.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../scss/search.scss'\n\nconst searchTermInput = document.getElementById('searchTerm')\n\nsearchTermInput?.addEventListener('keyup', showResults)\n\nasync function showResults(e) {\n    const searchResults = document.getElementById('searchResultsSection')\n    const searchTerm = e.target.value.trim()\n    if (!searchTerm) {\n        searchResults.innerHTML = ''\n        return\n    }\n    const response = await fetch(`/api/chefs/search?search=${searchTerm}`, {\n        headers: {\n            'Accept': 'application/json'\n        }\n    })\n    if (response.status === 200) {\n        const chefs = await response.json()\n        let html = `<p>Found ${chefs.length} results</p>`\n        chefs.forEach(chef => {\n            html += `<a href=\"/chef?id=${chef.id}\">${chef.firstName + ' ' + chef.lastName}</a><br>`\n        })\n        searchResults.innerHTML = html\n    } else {\n        searchResults.innerHTML = '<p>Found no results</p>'\n    }\n}\n"],"names":[],"sourceRoot":""}