{"version":3,"file":"bundle-chefs.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;UCDP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAM,GAAG,gDAAK;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yHAAyH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,QAAQ,EAAE,yBAAyB;AACrG,qCAAqC,qCAAqC;AAC1E,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL","sources":["webpack://programming5/./src/main/js/util/csrf.js","webpack://programming5/webpack/bootstrap","webpack://programming5/webpack/runtime/define property getters","webpack://programming5/webpack/runtime/hasOwnProperty shorthand","webpack://programming5/webpack/runtime/make namespace object","webpack://programming5/./src/main/js/chefs.js"],"sourcesContent":["export const header = document.querySelector('meta[name=\"_csrf_header\"]').content;\r\nexport const token = document.querySelector('meta[name=\"_csrf\"]').content;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {header, token} from \"./util/csrf.js\";\r\n\r\nconst chefBody = document.getElementById(\"chefBody\");\r\nconst deleteButtons = document.querySelectorAll(\"button.btn-danger\");\r\n\r\nfor (const deleteButton of deleteButtons) {\r\n    deleteButton?.addEventListener(\"click\", handleDeleteChef)\r\n}\r\n\r\nfillChefsTable().catch(error => {\r\n    console.error('Error fetching chefs:', error);\r\n});\r\n\r\nasync function fillChefsTable() {\r\n    try {\r\n        const response = await fetch('/api/chefs', {\r\n            headers: {\r\n                \"Accept\": \"application/json\", [header]: token\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            const chefs = await response.json();\r\n            chefs.forEach(chef => {\r\n                addChefToTable(chef)\r\n            })\r\n        } else {\r\n            console.error('Failed to fetch chefs:', response.statusText);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching chefs:', error);\r\n    }\r\n}\r\n\r\nasync function handleDeleteChef(event) {\r\n    const row = event.target.closest('.card');\r\n    const chefId = row.dataset.chefId;\r\n    const response = await fetch(`/api/chefs/${chefId}`, {\r\n        method: \"DELETE\", headers: {\r\n            [header]: token\r\n        }\r\n    });\r\n    if (response.status === 204) {\r\n        row.remove();\r\n    }\r\n}\r\n\r\n/**\r\n * @param {{id: string, firstName: string, lastName: string, dateOfBirth: string, username: string, password: string, role, string}} chef\r\n */\r\nfunction addChefToTable(chef) {\r\n    const roleNames = {\r\n        \"HEAD_CHEF\": \"Head Chef\", \"SOUS_CHEF\": \"Sous Chef\", \"LINE_COOK\": \"Line Cook\"\r\n    };\r\n\r\n    const roleName = roleNames[chef.role];\r\n\r\n    const roleGroup = document.getElementById(chef.role + \"-group\"); // Check if group exists\r\n    let cardGroup;\r\n    if (!roleGroup) {\r\n        // Create a new group if it doesn't exist\r\n        cardGroup = document.createElement(\"div\");\r\n        cardGroup.classList.add(\"role-group\", \"mb-4\", \"row\", \"text-secondary\"); // Add Bootstrap classes for rows\r\n        cardGroup.id = chef.role + \"-group\";\r\n\r\n        const groupName = document.createElement(\"h2\");\r\n        groupName.textContent = roleName; // Use role name as group header\r\n        cardGroup.appendChild(groupName);\r\n\r\n        chefBody.appendChild(cardGroup);\r\n    } else {\r\n        cardGroup = roleGroup;\r\n    }\r\n\r\n    const cardColumn = document.createElement(\"div\");\r\n    cardColumn.classList.add(\"col-md-6\");\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\"card\", \"mb-3\");\r\n    const age = Math.floor((new Date() - new Date(chef.dateOfBirth)) / (1000 * 60 * 60 * 24 * 365));\r\n    card.innerHTML = `\r\n        <div class=\"card-body\" onclick=\"location.href='/chef?id=${chef.id}';\" style=\"cursor: pointer;\">\r\n            <h5 class=\"card-title\">${chef.firstName + ' ' + chef.lastName}</h5>\r\n            <p class=\"card-text\">${age} years old</p>\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm delete-button\"><i class=\"fas fa-trash-alt\"></i></button>\r\n        </div>\r\n    `;\r\n    card.dataset.chefId = chef.id;\r\n    cardColumn.appendChild(card);\r\n    cardGroup.appendChild(cardColumn);\r\n\r\n    const newDeleteButton = card.querySelector('button');\r\n    newDeleteButton?.addEventListener(\"click\", (event) => {\r\n        event.stopPropagation();\r\n        handleDeleteChef(event).catch(error => {\r\n            console.error('Error deleting chef:', error);\r\n        });\r\n    });\r\n}\r\n"],"names":[],"sourceRoot":""}