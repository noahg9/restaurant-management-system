{"version":3,"file":"bundle-menu-items.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;UCDP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAM,GAAG,gDAAK;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAM,GAAG,gDAAK;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,iDAAM,GAAG,gDAAK;AACjG,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY,mGAAmG;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,sDAAsD;AACtD,qCAAqC,eAAe,EAAE,oBAAoB;AAC1E,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,gDAAgD,YAAY;AAC5D,KAAK;AACL","sources":["webpack://programming5/./src/main/js/util/csrf.js","webpack://programming5/webpack/bootstrap","webpack://programming5/webpack/runtime/define property getters","webpack://programming5/webpack/runtime/hasOwnProperty shorthand","webpack://programming5/webpack/runtime/make namespace object","webpack://programming5/./src/main/js/menu-items.js"],"sourcesContent":["export const header = document.querySelector('meta[name=\"_csrf_header\"]').content;\r\nexport const token = document.querySelector('meta[name=\"_csrf\"]').content;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {header, token} from \"./util/csrf.js\";\r\n\r\nconst menuItemBody = document.getElementById(\"menuItemBody\");\r\nconst nameInput = document.getElementById(\"name\");\r\nconst priceInput = document.getElementById(\"price\");\r\nconst courseNameSelect = document.getElementById(\"courseName\");\r\nconst vegetarianCheckbox = document.getElementById(\"vegetarian\");\r\nconst spiceLevelInput = document.getElementById(\"spiceLevel\");\r\nconst chefsSelect = document.getElementById(\"chefs\");\r\nconst addButton = document.getElementById(\"addButton\");\r\nconst deleteButtons = document.querySelectorAll(\"button.btn-danger\");\r\n\r\naddButton?.addEventListener(\"click\", addNewMenuItem);\r\n\r\nfor (const deleteButton of deleteButtons) {\r\n    deleteButton?.addEventListener(\"click\", handleDeleteMenuItem)\r\n}\r\n\r\nfillMenuItemsTable().catch(error => {\r\n    console.error('Error fetching menu items:', error);\r\n});\r\n\r\nfetchChefs().catch(error => {\r\n    console.error('Error fetching chefs:', error);\r\n});\r\n\r\nasync function fillMenuItemsTable() {\r\n    try {\r\n        const response = await fetch('/api/menu-items', {\r\n            headers: {\r\n                \"Accept\": \"application/json\", [header]: token\r\n            }\r\n        });\r\n        if (response.ok) {\r\n            const menuItems = await response.json();\r\n            menuItems.forEach(menuItem => {\r\n                addMenuItemToTable(menuItem)\r\n            })\r\n        } else {\r\n            console.error('Failed to fetch menu items:', response.statusText);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching menu items:', error);\r\n    }\r\n}\r\n\r\nasync function handleDeleteMenuItem(event) {\r\n    const row = event.target.closest('.card');\r\n    const menuItemId = row.dataset.menuItemId;\r\n    const response = await fetch(`/api/menu-items/${menuItemId}`, {\r\n        method: \"DELETE\", headers: {\r\n            [header]: token\r\n        }\r\n    });\r\n    if (response.status === 204) {\r\n        row.remove()\r\n    }\r\n}\r\n\r\nasync function fetchChefs() {\r\n    try {\r\n        const response = await fetch('/api/chefs', {\r\n            headers: {\r\n                \"Accept\": \"application/json\", [header]: token\r\n            }\r\n        });\r\n        if (response.ok) {\r\n            const chefs = await response.json();\r\n            populateChefsSelect(chefs);\r\n        } else {\r\n            console.error('Failed to fetch chefs:', response.statusText);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching chefs:', error);\r\n    }\r\n}\r\n\r\nasync function addNewMenuItem() {\r\n    const selectedChefs = Array.from(chefsSelect.selectedOptions).map(option => option.value);\r\n    try {\r\n        const response = await fetch(`/api/menu-items`, {\r\n            method: \"POST\", headers: {\r\n                \"Accept\": \"application/json\", \"Content-Type\": \"application/json\", [header]: token\r\n            }, body: JSON.stringify({\r\n                name: nameInput.value,\r\n                price: priceInput.value,\r\n                courseName: courseNameSelect.value,\r\n                vegetarian: vegetarianCheckbox.checked,\r\n                spiceLevel: spiceLevelInput.value,\r\n                chefs: selectedChefs\r\n            })\r\n        });\r\n        if (response.ok) {\r\n            const menuItem = await response.json();\r\n            addMenuItemToTable(menuItem);\r\n        } else {\r\n            console.error('Failed to add menu item:', response.statusText);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error adding menu item:', error);\r\n    }\r\n}\r\n\r\nfunction populateChefsSelect(chefs) {\r\n    chefsSelect.innerHTML = '';\r\n    chefs.forEach(chef => {\r\n        const option = document.createElement('option');\r\n        option.value = chef.id;\r\n        option.textContent = chef.firstName + ' ' + chef.lastName;\r\n        chefsSelect.appendChild(option);\r\n    });\r\n}\r\n\r\n/**\r\n * @param {{id: string, name: string, price: number, course: string, vegetarian: boolean, spiceLevel: number}} menuItem\r\n */\r\nfunction addMenuItemToTable(menuItem) {\r\n    const courseNames = {\r\n        \"STARTER\": \"Starter\",\r\n        \"MAIN\": \"Main\",\r\n        \"APPETIZER\": \"Appetizer\",\r\n        \"DESSERT\": \"Dessert\",\r\n        \"BEVERAGE\": \"Beverage\",\r\n        \"OTHER\": \"Other\"\r\n    };\r\n\r\n    const courseName = courseNames[menuItem.course];\r\n\r\n    const courseGroup = document.getElementById(menuItem.course + \"-group\"); // Check if group exists\r\n    let cardGroup;\r\n    if (!courseGroup) {\r\n        // Create a new group if it doesn't exist\r\n        cardGroup = document.createElement(\"div\");\r\n        cardGroup.classList.add(\"course-group\", \"mb-4\", \"row\", \"text-secondary\"); // Add Bootstrap classes for rows\r\n        cardGroup.id = menuItem.course + \"-group\";\r\n\r\n        const groupName = document.createElement(\"h2\");\r\n        groupName.textContent = courseName; // Use course name as group header\r\n        cardGroup.appendChild(groupName);\r\n\r\n        menuItemBody.appendChild(cardGroup);\r\n    } else {\r\n        cardGroup = courseGroup;\r\n    }\r\n\r\n    const cardColumn = document.createElement(\"div\");\r\n    cardColumn.classList.add(\"col-md-6\");\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\"card\", \"mb-3\");\r\n    const vegetarianIndicator = menuItem.vegetarian ? \"(V)\" : \"\"; // \"(V)\" for vegetarian, empty string for non-vegetarian\r\n    card.innerHTML = `\r\n        <div class=\"card-body\" style=\"cursor: pointer;\">\r\n            <h5 class=\"card-title\">${menuItem.name} ${vegetarianIndicator}</h5>\r\n            <p class=\"card-text\">â‚¬${menuItem.price}</p>\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm delete-button\"><i class=\"fas fa-trash-alt\"></i></button>\r\n        </div>\r\n    `;\r\n    card.dataset.menuItemId = menuItem.id;\r\n    cardColumn.appendChild(card);\r\n    cardGroup.appendChild(cardColumn);\r\n\r\n    const newDeleteButton = card.querySelector('button');\r\n    newDeleteButton?.addEventListener(\"click\", (event) => {\r\n        event.stopPropagation();\r\n        handleDeleteMenuItem(event).catch(error => {\r\n            console.error('Error deleting menu item:', error);\r\n        });\r\n    });\r\n    card?.addEventListener(\"click\", () => {\r\n        window.location.href = `/menu-item?id=${menuItem.id}`;\r\n    });\r\n}\r\n"],"names":[],"sourceRoot":""}